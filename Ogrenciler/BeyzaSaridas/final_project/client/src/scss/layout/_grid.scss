.container {
  width: 100%;
  padding-right: $spacing-md;
  padding-left: $spacing-md;
  margin-right: auto;
  margin-left: auto;

  @include respond-to("sm") {
    max-width: 540px;
  }

  @include respond-to("md") {
    max-width: 720px;
  }

  @include respond-to("lg") {
    max-width: 960px;
  }

  @include respond-to("xl") {
    max-width: 1140px;
  }

  @include respond-to("2xl") {
    max-width: 1320px;
  }
}

.container-fluid {
  width: 100%;
  padding-right: $spacing-md;
  padding-left: $spacing-md;
  margin-right: auto;
  margin-left: auto;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$spacing-md;
  margin-left: -$spacing-md;
}

.col {
  position: relative;
  width: 100%;
  padding-right: $spacing-md;
  padding-left: $spacing-md;
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

@for $i from 1 through 12 {
  .col-#{$i} {
    position: relative;
    width: 100%;
    padding-right: $spacing-md;
    padding-left: $spacing-md;
    flex: 0 0 percentage($i / 12);
    max-width: percentage($i / 12);
  }
}

@include respond-to("sm") {
  @for $i from 1 through 12 {
    .col-sm-#{$i} {
      position: relative;
      width: 100%;
      padding-right: $spacing-md;
      padding-left: $spacing-md;
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@include respond-to("md") {
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      position: relative;
      width: 100%;
      padding-right: $spacing-md;
      padding-left: $spacing-md;
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@include respond-to("lg") {
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      position: relative;
      width: 100%;
      padding-right: $spacing-md;
      padding-left: $spacing-md;
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@include respond-to("xl") {
  @for $i from 1 through 12 {
    .col-xl-#{$i} {
      position: relative;
      width: 100%;
      padding-right: $spacing-md;
      padding-left: $spacing-md;
      flex: 0 0 percentage($i / 12);
      max-width: percentage($i / 12);
    }
  }
}

@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint ==xs {
    @for $i from 0 through 12 {
      .order-#{$i} {
        order: $i;
      }
    }
  } @else {
    @include respond-to($breakpoint) {
      @for $i from 0 through 12 {
        .order-#{$breakpoint}-#{$i} {
          order: $i;
        }
      }
    }
  }
}

@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint ==xs {
    @for $i from 0 through 11 {
      .offset-#{$i} {
        margin-left: percentage($i / 12);
      }
    }
  } @else {
    @include respond-to($breakpoint) {
      @for $i from 0 through 11 {
        .offset-#{$breakpoint}-#{$i} {
          margin-left: percentage($i / 12);
        }
      }
    }
  }
}

.grid {
  display: grid;
  gap: $spacing-md;

  &-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }

  &-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }

  &-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }

  &-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }

  &-cols-5 {
    grid-template-columns: repeat(5, 1fr);
  }

  &-cols-6 {
    grid-template-columns: repeat(6, 1fr);
  }

  @include respond-to("sm") {
    &-cols-sm-1 {
      grid-template-columns: repeat(1, 1fr);
    }

    &-cols-sm-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &-cols-sm-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &-cols-sm-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    &-cols-sm-5 {
      grid-template-columns: repeat(5, 1fr);
    }

    &-cols-sm-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  @include respond-to("md") {
    &-cols-md-1 {
      grid-template-columns: repeat(1, 1fr);
    }

    &-cols-md-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &-cols-md-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &-cols-md-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    &-cols-md-5 {
      grid-template-columns: repeat(5, 1fr);
    }

    &-cols-md-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  @include respond-to("lg") {
    &-cols-lg-1 {
      grid-template-columns: repeat(1, 1fr);
    }

    &-cols-lg-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &-cols-lg-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &-cols-lg-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    &-cols-lg-5 {
      grid-template-columns: repeat(5, 1fr);
    }

    &-cols-lg-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  @include respond-to("xl") {
    &-cols-xl-1 {
      grid-template-columns: repeat(1, 1fr);
    }

    &-cols-xl-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &-cols-xl-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &-cols-xl-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    &-cols-xl-5 {
      grid-template-columns: repeat(5, 1fr);
    }

    &-cols-xl-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  &-gap-sm {
    gap: $spacing-sm;
  }

  &-gap-md {
    gap: $spacing-md;
  }

  &-gap-lg {
    gap: $spacing-lg;
  }

  &-gap-xl {
    gap: $spacing-xl;
  }
}

.auto-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: $spacing-md;
}
