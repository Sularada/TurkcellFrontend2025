{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/context/ThemeContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  dropIcon: string;\n  notificationIcon: string;\n  logoIcon : string;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [theme, setTheme] = useState<Theme>(\"light\");\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(\"theme\") as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n      document.documentElement.setAttribute(\"data-theme\", savedTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const toggleTheme = () => setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  const logoIcon = theme === \"light\" ? \"/assets/Logo.svg\" : \"/assets/Logo2.svg\";\n  const dropIcon = theme === \"light\" ? \"/assets/drop-black.svg\" : \"/assets/drop-white.svg\";\n  const notificationIcon = theme === \"light\" ? \"/assets/notification-black.svg\" : \"/assets/notification-white.svg\";\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, dropIcon, notificationIcon, logoIcon }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) throw new Error(\"useTheme, ThemeProvider içinde kullanılmalıdır. Başka bir yerden çağırıldı\");\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAaA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;;IACjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,SAAS;gBACT,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;YACtD;QACF;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;YACpD,aAAa,OAAO,CAAC,SAAS;QAChC;kCAAG;QAAC;KAAM;IAEV,MAAM,cAAc,IAAM,SAAS,UAAU,UAAU,SAAS;IAChE,MAAM,WAAW,UAAU,UAAU,qBAAqB;IAC1D,MAAM,WAAW,UAAU,UAAU,2BAA2B;IAChE,MAAM,mBAAmB,UAAU,UAAU,mCAAmC;IAEhF,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAa;YAAU;YAAkB;QAAS;kBACtF;;;;;;AAGP;GA1Ba;KAAA;AA4BN,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;IAJa","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/services/services.ts"],"sourcesContent":["import dotenv from 'dotenv';\ndotenv.config();\nconst API_KEY = process.env.NEXT_PUBLIC_CMC_API_KEY;\nconsole.log(\"API_KEY:\", API_KEY);\nimport { CryptoInfo, CryptoPrice } from \"@/app/types\"; \n\nexport const fetchCryptoData = async (type: 'listings' | 'info', ids?: string[]): Promise<any> => {\n  const query = type === 'info' && ids ? `?type=info&ids=${ids.join(',')}` : '?type=listings';\n  const response = await fetch(`/api/crypto-price${query}`);\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  return data;\n};\n// export const fetchCryptoData = async (\n//   type: 'listings' | 'info' | 'ohlcv' | 'historical',\n//   ids?: string[]\n// ): Promise<any> => {\n//   let query = '';\n\n//   switch (type) {\n//     case 'info':\n//       if (ids) query = `?type=info&ids=${ids.join(',')}`;\n//       break;\n//     case 'ohlcv':\n//       if (ids) query = `?type=ohlcv&ids=${ids.join(',')}`;\n//       break;\n//     case 'historical':\n//       if (ids) query = `?type=historical&ids=${ids.join(',')}`;\n//       break;\n//     default:\n//       query = '?type=listings';\n//   }\n\n//   const response = await fetch(`/api/crypto-price${query}`);\n\n//   if (!response.ok) {\n//     throw new Error(`HTTP error! status: ${response.status}`);\n//   }\n\n//   const data = await response.json();\n//   return data;\n// };\n\n\nexport const fetchCryptoPrices = async (): Promise<CryptoPrice[]> => {\n  try {\n    const response = await fetch('/api/crypto-price');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.data.map((crypto: any) => ({\n      id: crypto.id,\n      name: crypto.name,\n      symbol: crypto.symbol,\n      quote: {\n        USD: {\n          price: crypto.quote.USD.price,\n          market_cap: crypto.quote.USD.market_cap,\n          volume_change_24h: crypto.quote.USD.volume_change_24h,\n        },\n      },\n    }));\n  } catch (error) {\n    console.error('Error fetching crypto prices:', error);\n    throw error;\n  }\n};\nexport const fetchCryptoHistory = async (id: string) => {\n  const response = await fetch(`/api/crypto-price?type=historical&ids=${id}`);\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  return data.data?.[id]?.quotes || [];\n};\n\n// export const formatOhlcvData = (ohlcvRawData: any, coinId: string) => {\n//   const coinData = ohlcvRawData.data?.[coinId];\n//   const quotes = coinData?.quotes || [];\n\n//   return quotes.map((q: any) => ({\n//     id: coinData.id,\n//     date: q.time_open.split('T')[0],\n//     low: q.quote.USD.low,\n//     high: q.quote.USD.high\n//   }));\n// };\n\n\n\n\n"],"names":[],"mappings":";;;;;AAEgB;AAFhB;;AACA,wIAAA,CAAA,UAAM,CAAC,MAAM;AACb,MAAM;AACN,QAAQ,GAAG,CAAC,YAAY;AAGjB,MAAM,kBAAkB,OAAO,MAA2B;IAC/D,MAAM,QAAQ,SAAS,UAAU,MAAM,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG;IAC3E,MAAM,WAAW,MAAM,MAAM,CAAC,iBAAiB,EAAE,OAAO;IAExD,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO;AACT;AAgCO,MAAM,oBAAoB;IAC/B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,SAAgB,CAAC;gBACrC,IAAI,OAAO,EAAE;gBACb,MAAM,OAAO,IAAI;gBACjB,QAAQ,OAAO,MAAM;gBACrB,OAAO;oBACL,KAAK;wBACH,OAAO,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK;wBAC7B,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,UAAU;wBACvC,mBAAmB,OAAO,KAAK,CAAC,GAAG,CAAC,iBAAiB;oBACvD;gBACF;YACF,CAAC;IACH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AACF;AACO,MAAM,qBAAqB,OAAO;IACvC,MAAM,WAAW,MAAM,MAAM,CAAC,sCAAsC,EAAE,IAAI;IAE1E,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI,EAAE,CAAC,GAAG,EAAE,UAAU,EAAE;AACtC,GAEA,0EAA0E;CAC1E,kDAAkD;CAClD,2CAA2C;CAE3C,qCAAqC;CACrC,uBAAuB;CACvB,uCAAuC;CACvC,4BAA4B;CAC5B,6BAA6B;CAC7B,SAAS;CACT,KAAK","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/molecules/Dashboard/CryptoCard.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"CryptoCard-module-scss-module__gsPuCa__card\",\n  \"details\": \"CryptoCard-module-scss-module__gsPuCa__details\",\n  \"error\": \"CryptoCard-module-scss-module__gsPuCa__error\",\n  \"header\": \"CryptoCard-module-scss-module__gsPuCa__header\",\n  \"logo\": \"CryptoCard-module-scss-module__gsPuCa__logo\",\n  \"title\": \"CryptoCard-module-scss-module__gsPuCa__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/components/molecules/Dashboard/CryptoCard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchCryptoData } from '@/services/services';\nimport { CombinedData, CryptoPrice } from '@/app/types';\nimport styles from './CryptoCard.module.scss';\n\nconst CryptoCard = () => {\n  const [coinData, setCoinData] = useState<CombinedData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedSymbol, setSelectedSymbol] = useState<string>('BTC'); \n  const [availableCoins, setAvailableCoins] = useState<CryptoPrice[]>([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        const listingsData = await fetchCryptoData('listings');\n        setAvailableCoins(listingsData.data); \n\n        const coin = listingsData.data.find((crypto: CryptoPrice) => crypto.symbol === selectedSymbol);\n\n        if (!coin) {\n          console.warn(`Symbol \"${selectedSymbol}\" için coin bulunamadı.`);\n          return;\n        }\n\n        const infoData = await fetchCryptoData('info', [coin.id.toString()]);\n\n        const mergedCoin: CombinedData = {\n          id: coin.id,\n          rank: coin.rank || 0,\n          name: coin.name,\n          symbol: coin.symbol,\n          logo: infoData.data[coin.id]?.logo || '',\n          price: coin.quote.USD.price,\n          market_cap: coin.quote.USD.market_cap,\n          percent_change_1h: coin.quote.USD.percent_change_1h,\n          percent_change_24h: coin.quote.USD.percent_change_24h,\n          percent_change_7d: coin.quote.USD.percent_change_7d,\n          percent_change_30d: coin.quote.USD.percent_change_30d || 0,\n          percent_change_60d: coin.quote.USD.percent_change_60d || 0,\n          percent_change_90d: coin.quote.USD.percent_change_90d || 0,\n          sparklineData: generateDummySparkline(coin.quote.USD.price),\n        };\n\n        setCoinData(mergedCoin);\n      } catch (error) {\n        console.error(\"Veri çekme hatası:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [selectedSymbol]); \n\n  const generateDummySparkline = (price: number): number[] => {\n    return Array.from({ length: 6 }, () => {\n      const randomChange = (Math.random() - 0.5) * 2;\n      return price + price * (randomChange / 100);\n    });\n  };\n\n  const handleSymbolChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedSymbol(event.target.value); \n  };\n\n  if (loading) return <div className={styles.card}>Yükleniyor...</div>;\n  if (!coinData) return <div className={`${styles.card} ${styles.error}`}>Veri yüklenemedi.</div>;\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.header}>\n        {coinData.logo && <img src={coinData.logo} alt={coinData.symbol} className={styles.logo} />}\n        <h2 className={styles.title}>{coinData.name} ({coinData.symbol})</h2>\n      </div>\n      <div className={styles.selectContainer}>\n        <select value={selectedSymbol} onChange={handleSymbolChange} className={styles.selectBox}>\n          {availableCoins.map((coin) => (\n            <option key={coin.id} value={coin.symbol}>\n              {coin.name} ({coin.symbol})\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className={styles.details}>\n        <p>💰 <strong>Last Price:</strong> ${coinData.price.toFixed(2)}</p>\n        <p>📈 <strong>24h Change:</strong> {coinData.percent_change_24h.toFixed(2)}%</p>\n        <p>💎 <strong>Market Cap:</strong> ${coinData.market_cap.toLocaleString()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoCard;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/i18n.ts"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport HttpApi from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nif (!i18n.isInitialized) {\n  i18n\n    .use(HttpApi)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      fallbackLng: 'en', \n      debug: true, \n      interpolation: {\n        escapeValue: false, \n      },\n      backend: {\n        loadPath: '/locales/{{lng}}/translation.json', \n      },\n    });\n}\n\nexport default i18n;"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA,IAAI,CAAC,oJAAA,CAAA,UAAI,CAAC,aAAa,EAAE;IACvB,oJAAA,CAAA,UAAI,CACD,GAAG,CAAC,6JAAA,CAAA,UAAO,EACX,GAAG,CAAC,0MAAA,CAAA,UAAgB,EACpB,GAAG,CAAC,qKAAA,CAAA,mBAAgB,EACpB,IAAI,CAAC;QACJ,aAAa;QACb,OAAO;QACP,eAAe;YACb,aAAa;QACf;QACA,SAAS;YACP,UAAU;QACZ;IACF;AACJ;uCAEe,oJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useTranslation } from \"react-i18next\";\nimport { ThemeProvider, useTheme } from \"../../context/ThemeContext\";\nimport Sidebar from \"@/components/atoms/Sidebar/Sidebar\";\nimport CryptoCard from \"@/components/molecules/Dashboard/CryptoCard\";\nimport { useEffect, useState } from \"react\";\nimport { CryptoOhlcvStats, CombinedData } from \"@/app/types\";\nimport \"../../app/global.scss\";\nimport \"../../../i18n\";\n\nexport default function Da({ children }: { children: React.ReactNode }) {\n    return (\n        <ThemeProvider>\n            <DashboardContent>{children}</DashboardContent>\n        </ThemeProvider>\n    );\n}\n\nconst DashboardContent = ({ children }: { children: React.ReactNode }) => {\n    const { theme } = useTheme();\n    const { t } = useTranslation();\n\n\n\n\n    return (\n        <div>\n            {/* <Sidebar /> */}\n            <CryptoCard/>\n\n            <main>{children}</main>\n        </div>\n    );\n};\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAEA;AAIA;;;AATA;;;;;;AAWe,SAAS,GAAG,EAAE,QAAQ,EAAiC;IAClE,qBACI,6LAAC,kIAAA,CAAA,gBAAa;kBACV,cAAA,6LAAC;sBAAkB;;;;;;;;;;;AAG/B;KANwB;AAQxB,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAiC;;IACjE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD;IAK3B,qBACI,6LAAC;;0BAEG,6LAAC,6JAAA,CAAA,UAAU;;;;;0BAEX,6LAAC;0BAAM;;;;;;;;;;;;AAGnB;GAfM;;QACgB,kIAAA,CAAA,WAAQ;QACZ,mKAAA,CAAA,iBAAc;;;MAF1B","debugId":null}}]
}