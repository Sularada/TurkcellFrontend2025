{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/components/organisms/ProfileSections/UserProfile.tsx"],"sourcesContent":["'use client';\nimport \"../../../app/global.scss\";\n\nimport React from 'react';\nimport useUserStore from \"@/store/users\"; \nimport styles from \"./UserProfile.module.scss\";\n\nconst UserProfile = () => {\n  const { user } = useUserStore();\n\n  if (!user) return <div>Kullanıcı verisi bulunamadı.</div>;\n\n  return (\n    <div className={styles.userProfile}>\n      <h2 className={styles.title}>Kullanıcı Profili</h2>\n\n      <p className={styles.desc}>Kullanıcı bilgilerinizi aşağıda görüntüleyebilirsiniz.</p>\n\n      <div className={styles.avatarWrapper}>\n        {user.avatarUrl ? (\n          <img src={user.avatarUrl} alt=\"Avatar\" className={styles.avatar} />\n        ) : (\n          <div className={styles.avatarPlaceholder}>Avatar Yok</div>\n        )}\n      </div>\n\n      <form className={styles.form}>\n        <label>\n          Email:\n          <input type=\"text\" value={user.email} readOnly />\n        </label>\n\n        <label>\n          Nickname:\n          <input type=\"text\" value={user.nickname} readOnly />\n        </label>\n\n        <label>\n          UID:\n          <input type=\"text\" value={user.uid} readOnly />\n        </label>\n\n        <label>\n          UID Code:\n          <input type=\"text\" value={user.uidCode} readOnly />\n        </label>\n\n        <label>\n          Telefon Numarası:\n          <input type=\"text\" value={`+${user.countryCode} ${user.phoneNumber}`} readOnly />\n        </label>\n\n        \n      </form>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"names":[],"mappings":";;;;AAIA;;;;;;AAJA;;;;;AAOA,MAAM,cAAc;IAClB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAY,AAAD;IAE5B,IAAI,CAAC,MAAM,qBAAO,8OAAC;kBAAI;;;;;;IAEvB,qBACE,8OAAC;QAAI,WAAW,OAAO,WAAW;;0BAChC,8OAAC;gBAAG,WAAW,OAAO,KAAK;0BAAE;;;;;;0BAE7B,8OAAC;gBAAE,WAAW,OAAO,IAAI;0BAAE;;;;;;0BAE3B,8OAAC;gBAAI,WAAW,OAAO,aAAa;0BACjC,KAAK,SAAS,iBACb,8OAAC;oBAAI,KAAK,KAAK,SAAS;oBAAE,KAAI;oBAAS,WAAW,OAAO,MAAM;;;;;yCAE/D,8OAAC;oBAAI,WAAW,OAAO,iBAAiB;8BAAE;;;;;;;;;;;0BAI9C,8OAAC;gBAAK,WAAW,OAAO,IAAI;;kCAC1B,8OAAC;;4BAAM;0CAEL,8OAAC;gCAAM,MAAK;gCAAO,OAAO,KAAK,KAAK;gCAAE,QAAQ;;;;;;;;;;;;kCAGhD,8OAAC;;4BAAM;0CAEL,8OAAC;gCAAM,MAAK;gCAAO,OAAO,KAAK,QAAQ;gCAAE,QAAQ;;;;;;;;;;;;kCAGnD,8OAAC;;4BAAM;0CAEL,8OAAC;gCAAM,MAAK;gCAAO,OAAO,KAAK,GAAG;gCAAE,QAAQ;;;;;;;;;;;;kCAG9C,8OAAC;;4BAAM;0CAEL,8OAAC;gCAAM,MAAK;gCAAO,OAAO,KAAK,OAAO;gCAAE,QAAQ;;;;;;;;;;;;kCAGlD,8OAAC;;4BAAM;0CAEL,8OAAC;gCAAM,MAAK;gCAAO,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,CAAC,CAAC,EAAE,KAAK,WAAW,EAAE;gCAAE,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAOxF;uCAEe","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/components/organisms/ProfileSections/Referrals.tsx"],"sourcesContent":["'use client';\nimport \"../../../app/global.scss\";\n\nimport React from 'react'\n\nconst Referrals = () => {\n  return (\n    <div>Referrals</div>\n  )\n}\n\nexport default Referrals"],"names":[],"mappings":";;;;AAAA;;;AAKA,MAAM,YAAY;IAChB,qBACE,8OAAC;kBAAI;;;;;;AAET;uCAEe","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/components/organisms/ProfileSections/ChangePassword.tsx"],"sourcesContent":["'use client';\nimport \"../../../app/global.scss\";\n\nimport React from 'react'\n\nconst ChangePassword = () => {\n  return (\n    <div>ChangePassword</div>\n  )\n}\n\nexport default ChangePassword"],"names":[],"mappings":";;;;AAAA;;;AAKA,MAAM,iBAAiB;IACrB,qBACE,8OAAC;kBAAI;;;;;;AAET;uCAEe","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeynepguney/Desktop/TurkcellFrontend2025/Ogrenciler/ZeynepGuney/Odevler/Final/crypto-app/src/app/profile/%5Bsection%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { notFound } from \"next/navigation\";\nimport { use } from \"react\"; \nimport UserProfile from \"../../../components/organisms/ProfileSections/UserProfile\";\nimport Referrals from \"../../../components/organisms/ProfileSections/Referrals\";\nimport ChangePassword from \"../../../components/organisms/ProfileSections/ChangePassword\";\n\ntype Section = 'user' | 'referrals' | 'apikeys' | 'history' | '2fa' | 'password';\n\ntype Params = {\n  section: Section;\n};\n\nconst SectionMap: Record<Section, React.ReactNode> = {\n  user: <UserProfile />,\n  referrals: <Referrals />,\n  apikeys: <div>API Keys Component</div>,\n  history: <div>Login History Component</div>,\n  '2fa': <div>2FA Component</div>,\n  password: <ChangePassword />,\n};\n\nexport default function ProfileSection({ params }: { params: Promise<Params> }) {\n  const { section } = use(params); \n\n  if (!Object.keys(SectionMap).includes(section)) {\n    return notFound();\n  }\n\n  return <>{SectionMap[section]}</>;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAcA,MAAM,aAA+C;IACnD,oBAAM,8OAAC,iKAAA,CAAA,UAAW;;;;;IAClB,yBAAW,8OAAC,+JAAA,CAAA,UAAS;;;;;IACrB,uBAAS,8OAAC;kBAAI;;;;;;IACd,uBAAS,8OAAC;kBAAI;;;;;;IACd,qBAAO,8OAAC;kBAAI;;;;;;IACZ,wBAAU,8OAAC,oKAAA,CAAA,UAAc;;;;;AAC3B;AAEe,SAAS,eAAe,EAAE,MAAM,EAA+B;IAC5E,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,MAAG,AAAD,EAAE;IAExB,IAAI,CAAC,OAAO,IAAI,CAAC,YAAY,QAAQ,CAAC,UAAU;QAC9C,OAAO,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;IAChB;IAEA,qBAAO;kBAAG,UAAU,CAAC,QAAQ;;AAC/B","debugId":null}}]
}